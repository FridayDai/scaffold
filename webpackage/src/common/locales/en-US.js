export default {
    'common': {
        'fetch': 'Fetching data ...',
        'next': 'Next',
        'previous': 'Previous',
        'done': 'Done',
        'edit': 'Edit',
        'notFound': 'Not Found Content',
        'cancel': 'Cancel',
        'save': 'Save',
        'confirm': 'Confirm',
        'delete': 'Delete',
        'deleteSuccess': 'Delete Success',
        'deleteFailed': 'Delete Failed',
        'confirmDelete': 'Are you sure to delete?',
        'updateSuccess': 'Update Success',
        'updateFailed': 'Update Failed',
        'true': 'True',
        'false': 'False',
        'reset': 'Reset'
    },
    'pagetitle': {
        'testcomponent': 'Test Demo Page',
        'login': 'Login',
        'nopermission': 'No Permission',
        'homepage': 'Config Center',
        'license': 'license',
        'hublist': 'hublist',
        'devicelist': 'devicelist',
        'strategylist': 'strategylist',
        'linktest': 'linktest'
    },
    'errorcode': {
        '-10000': 'The server encountered an internal error. Please try again later or contact the administrator!',
        '-10040': 'The reference device already exists',
        '-10041': 'Device ID not found',
        '-10042': 'The device point was not found',
        '-10043': 'The mapping rule does not support',
        '-10044': 'The reference was not found',
        '-10045': 'The source device is not found in the reference',
        '-10046': 'Database execution error',
        '-10047': 'Rule cannot be configured',
        '-10048': 'Unknown rule configuration error',

        '-400': 'rule function is not found',
        '-401': 'Call function error',
        '-402': 'Methods define too much, and a script can only define one method',
        '-403': 'Function load error',
        '-404': 'Rules of repeat',
        '-405': 'Analytic rule error',
        '-406': 'Function update failed',
        '-407': 'Function to repeat',
        '-408': 'Function compilation error',
        '-500': 'Server general error'
    },
    'homepage': {
        'thing': 'IoT Hub',
        'rule': 'Rule Engine',
        'tsdb': 'TSDB',
        'apigateway': 'API Gateway',
        'asset': 'Asset Relationship',
        'devicetype': 'Template Lib.',
        'log': 'Log Management'
    },
    'nopermission': {
        'warn': 'The current user has no permission, please relogin with another account!',
        'switch': 'Switch User'
    },
    'navheader': {
        'dateformat': '{0}-{1}-{2} {3}:{4}:{5} {6}',
        'logouterror': 'Exit error, please try again later.',
        'logout': 'Log out',
        'about': 'About',
        'usercenter': 'User center',
        'confirm': 'Confirm'
    },
    'leftmenu': {
        'license': 'License',
        'management': 'Management',
        'hub': 'Hub',
        'device': 'Thing',
        'strategy': 'Strategy',
        'linktest': ' Link test',
        'rulelist': 'Rule list',
        'rulesManagement': 'rules Management',
        'ruledebug': 'Rule debug',
        'userdefinedfunction': 'User function',
        'back': '< Back to Previous Level',

        'tsdb': 'TSDB',
        'databaselist': 'Dblist',
        'basicinfo': 'Basic Info',
        'importandexport': ' Import & Export',
        'dataquery': ' Data Query',

        'assetaccess': 'Asset Access',
        'assetgrouping': 'Asset Grouping',

        'groupconf': 'API Groups',
        'apilist': 'API List',
        'signmethod': 'API Sign',
        'apimanagement': 'API Management',
        'devicetype': 'Template Lib.',
        'connectConfig': 'Connect Config',

        'logmanagement': 'Log Management',
        'logsearch': 'Log Search'
    },
    'user': {
        'name': '用户名',
        'pwd': '密码',
        'teamcode': '组织代码',
        'value_need': '用户名和密码不能为空！',
        'login_failure': '用户不存在或者密码错误',
        'no_permission_failure': '没有权限，请联系系统管理员！'
    },
    'license': {
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'licensename': 'License name',
        'accessdevicecount': 'Number of accessible devices',
        'type': 'Type',
        'type_personage': 'Personage',
        'type_industry': 'Industry',
        'expirydate': 'Expiry date',
        'description': 'Description',
        'operation': 'Operation',
        'edit': 'Edit',
        'delete': 'Delete',
        'deleteconfirmtitle': 'Are you sure to delete this license?',
        'createlicense': 'Create license',
        'editlicense': 'Edit license',
        'licensesearchhint': 'Enter the name of the query license',
        'licenseaccesscounthint': 'Please enter the number',
        'licensetypeselect': 'Please select a type',
        'licensenamehint': 'Enter the name of the license',
        'licenseexpirydatehint': 'Please enter a valid',
        'licenseedgescaphint': 'Please enter the number can access devices(number),Less than 10 digits'

    },
    'hublist': {
        'shownolicensetip': 'Please select the license you need first',
        'hubname': 'Hub name',
        'hubdesc': 'Description',
        'createtime': 'Creation time',
        'operation': 'Operation',
        'edit': 'Edit',
        'delete': 'Delete',
        'deleteconfirmtitle': 'Are you sure to delete this hub?',
        'createhub': 'Create hub',
        'edithub': 'Edit hub',
        'hubsearchhint': 'Enter the name of the query hub',
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'description': 'Description',
        'hublistnamehint': 'Please enter the name'
    },
    'thinglist': {
        'device': 'Thing ',
        'thingname': 'Thing name',
        'thingdesc': 'Description',
        'strategyofdevice': 'Binding strategy',
        'createtime': 'Creation time',
        'opetation': 'Operation',
        'linktest': 'Link test',
        'resetkey': 'Reset key',

        'edit': 'Edit',
        'delete': 'Delete',
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'hint': 'Hint',
        'deleteconfirmtitle': 'Are you sure to delete this thing?',
        'lookupsecretkey': 'Look at the key',

        'creatething': 'Create thing',
        'editthing': 'Edit thing',
        'thingnametip': 'Please fill in the thing name',
        'errorthingnametip': 'The device name contains a mismatch character or longer than 30',
        'selectstrategy': 'Select strategy',
        'selectstrategytip': 'Please select a strategy',
        'create': 'Create',
        'loadmore': 'Lower pull loads more',
        'resetkeytip': 'After the key is reset, the key of the network connection MQTT will be changed ' +
        'and may need to' +
        ' be reburned. Please be careful.Do you reset the key?',

        'shownolicenseandhubtip': 'Please select the license and the hub you need first',
        'devicesearchhint': 'Enter the name of the query thing',
        'devicenamewritetip': 'Thing name be consisted of English letter（a-z，is not case sensitive） number（0-9） ' +
        'underline “_”，Cannot use Spaces and special characters（Such as chinese character,！,$,& and ?），' +
        'The name length less than 30.',

        'showkeytip': 'generate key succeeds, please keep the key properly, ' +
        'you will use the device/key to connect the IoT service',
        'clickcopy': 'Click on the copy',
        'copysuccess': 'Copy Success',
        'savekeytip': '*Please keep the above key properly. ' +
        'The key loss cannot be retrieved and can only be regenerated'
    },
    'strategylist': {
        'createstrategy': 'Create strategy',
        'editstrategy': 'Edit strategy',

        'strategyname': 'Strategy name',
        'strategynametip': 'Please fill in the strategy name',
        'strategydesc': 'Description',

        'topic': 'Topic',
        'createtime': 'Creation time',
        'operation': 'Operation',
        'edit': 'Edit',
        'delete': 'Delete',
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'deleteconfirmtitle': 'Are you sure to delete this strategy?',

        'strategysearchhint': 'Enter the name of the query strategy',

        'topicname': 'Topic name',
        'topicnamewritetip': 'Topic name be consisted of English letter（a-z， is not case sensitive） ' +
        'number（0-9）and  character(#、/、+、%、.、_).' +
        'Cannot use Spaces and special characters（Such as chinese character,！,$,& and ?），' +
        'The name length less than 100.',
        'topicnamelacktip': 'Please fill in the topic name',
        'topicnameerrortip': 'Contains unmatched characters or lengths over 100',
        'topicdesc': 'Description',
        'authority': 'Authority',
        'publish': 'Publish(PUB)',
        'subscribe': 'Subscibe(SUB)',
        'authoritytip': 'Please fill in the authority',

        'bindtopicforstrategytip': 'Note: click on the right plus icon(+) to bind more themes for this strategy.',

        'shownolicenseandhubtip': 'Please select the license and the hub you need first!'
    },
    'linktest': {
        'mqttparams': 'parameters related MQTT',
        'stepone': 'Establish Connection',
        'steptwo': 'Publish',
        'stepthree': 'Subscriptions',
        'stepfour': 'Message',
        'connecting': 'connecting',
        'unconnect': 'unconnected',
        'hostname': 'Host name:',
        'port': 'Port:',
        'username': 'Device name:',
        'thingkey': 'Thing key:',
        'userid': 'User ID:',
        'clientidtip': 'The user ID is randomly generated random number,' +
        ' and the user can modify it according to the need, but cannot repeat',
        'ssltip': 'The test service only supports WSS connections',

        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'addsubscribetopic': 'Add subscription topic',
        'lackparams': 'Lack of required parameters',
        'connectsuccess': 'Be connected successfully',
        'connectclose': 'Connection is closed',
        'connecterror': ' Connection fail',
        'pleaseconnectfirst': 'Please connect first',
        'topicnamewritetip': 'The topic name wildcard includes：separator（/）、A number of matches （#）、' +
        'A single match （+），The # can only be located at the end of the name，' +
        'Such as：topic/#、topic/+/test',
        'errortopictip': 'Please fill in the correct topic',
        'errorpublishtip': 'The publish topic cannot contain "#" and "+"',
        'timeexceed': 'Keep alive must be number between 1 to 3600',
        'connect': 'Connect',
        'cancelConnect': 'Unconnect',
        'publish': 'Publish',
        'addSubscribeTopic': 'Add New Topic Subscription'
    },
    'userfunction': {
        'insertsuccess': ' Added successfully',
        'updatesuccess': 'Updated successfully',
        'inputfunctionname': 'Please enter the function name',
        'confirmdelete': 'Are you sure to delete this function?',
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'param': 'parameter',
        'inputfunctionbeforesave': 'Please define the function first before saving',
        'save': 'Save',
        'test': 'Test',
        'result': 'Result',
        'insertfunction': ' Add Function'
    },
    'ruledebug': {
        'warmtip': 'Warm tip: this validation is only for data format validation,' +
        ' and does not actually write to the data destination',
        'searchsql': 'Inquire Statement',
        'inputdata': 'Input Data',
        'sqlhint': 'Please fill in the query',
        'inputdatahint': 'Please enter the validation data',
        'test': 'Test',
        'outputdata': 'Output Data'
    },
    'rulelist': {
        'name': 'Rule Name',
        'state': 'state',
        'desc': 'description',
        'sure': 'sure',
        'cancel': 'cancel',
        'isdelete': 'Confirm deletion?',
        'thing': 'thing',
        'topic': 'topic',
        'datato': 'Data destination',
        'createtime': 'creation time',
        'action': 'operation',
        'edit': 'edit',
        'delete': 'delete',
        'disable': 'disable',
        'enable': 'enable',
        'ruledebug': 'Rules for debugging',
        'createrule': 'Create rule',
        'isdisabled': 'Disabled',
        'isenabled': 'Enabled',
        'whethertodisable': 'Is it disabled?',
        'whethertoenable': 'Is it enabled?'
    },
    'createrule': {
        'createrule': 'Create rule',
        'editrule': 'Edit Rule',
        'basemsg': 'basic information',
        'rulename': 'Rule Name',
        'ruledesc': 'Rule description',
        'filter': 'data filtration',
        'select': 'inquire statement',
        'check': 'detection',
        'submit': 'submit',
        'cancel': 'cancel',
        'issuccess': 'Success through grammar testing',
        'entername': 'Please enter the rule name',
        'enterdesc': 'Please enter a rule description',
        'entersql': 'Please fill in the SQL statement',
        'rule': 'select t.* from topic.conn_server as t to STREAM with param {"root":"t.*"}'
    },
    'databaselist': {
        'databasename': 'Database name',
        'state': 'state',
        'operate': 'Operate',
        'detail': 'View details',
        'createdatabase': 'Create Database',
        'name': 'Name',
        'pleaseinputname': 'Please fill in the name',
        'databasesearchhint': 'Please enter the database name to query the database',
        'createsuccess': 'Create Success',
        'normal': 'normal',
        'databasenamerepeat': 'The database nase already exists',
        'formatdatabasename': 'database name can only be filled withed namebers,letters,' +
        'underscores,and cannot be pure numbers'
    },
    'basicinfo': {
        'ms': 'ms',
        's': 's',
        'metricname': 'Metric Name',
        'retention': 'Retention Time',
        'precision': 'Time Precision',
        'createtime': 'Creation time',
        'basicinfo': 'Basic Info',
        'databasename': 'Database name',
        'host': 'Host',
        'createmetric': 'Create Metric',
        'name': 'Name',
        'pleaseinputname': 'Please fill in the name',
        'pleaseinputtag': 'Please fill one tag at least',
        'retentiontip': 'Please fill in the Numbers and take the units.units(s:second，m:minute，h:hour，d:day,' +
        'w:week，M:mongth，y:year).sunch as：7d on behalf of the 7 days。',
        'pleaseinputretention': 'retention out of bounds，the maximum time is 2147483647 seconds',
        'tagklength': 'Tag key length',
        'tagvlength': 'Tag value length',
        'numbertip': 'Please enter number',
        'advanced': 'advanced',
        'metricsearchhint': 'Please enter metric name to query metric',
        'formataction': 'The reservation time format must be: nonzero integer + time unit',
        'pleaseinputtagvlen': 'Please enter the label name length, and label value length',
        'checktagvlenisnumber': 'The tag name length and label length can only be number',
        'metricnamerepeat': 'The metric name already exists',
        'metricnamerule': 'metric names can only be filled in Numbers, letters, and underscores',
        'isdelete': 'Confirm the deletion?'
    },
    'importandexport': {
        'export': 'Export',
        'import': 'Import',
        'invalidmetric': 'there is not metric in this database',
        'all': 'All',
        'importsuccess': 'import success',
        'importrestrictionone': 'there must be metric and ts field in csv file,' +
        'such as：metric,ts,value,city,zip_code,longitude;',
        'importrestrictiontwo': 'Additional value fields that need to be aggregated need to include value types, ' +
        'in the form headline—— column name#type, data types includes long double int, for example: value#Long',
        'importrestrictionthree': 'ts(time stamps) cannot be represented by scientific notation',
        'importing': 'importing',
        'confirm': 'Confirm',
        'timerange': ' Time Range',
        'metric': 'Metric',
        'pleaseselectmetric': 'Please select a metric',
        'filelayout': 'Export file format',
        'filenumber': 'Number of exported files',
        'single': 'Single',
        'multiple': 'Multiple(Each metric exports a file)',
        'exporting': 'exporting',
        'exportmetricempty': 'Please select at least one metric'
    },
    'dataquery': {
        'databasename': ' Database name',
        'searchsql': 'Query statement',
        'searchsqltip': 'The format of query statement：select field(such as ts) as x,field1 as y1,' +
        'avg(field2) as y2,tag1 as legend1,tags2 as legend2 ' +
        'from dbname.metricname where tag2=1 group by tag1,time(2h) ' +
        'x on behalf of xarix，y on behalf of yarix，legend on behalf of legend(That is every line in the table)',
        'quering': 'quering',
        'chart': 'Data graph',
        'time': 'query time',
        'scanednumber': 'scaned data rows',
        'datanumber': 'sample points',
        'runchart': 'Run chart',
        'tablelist': 'Data list',
        'confirm': 'Confirm',
        'emptysql': 'Please fill in the query',
        'correctdatabasename': 'Please fill in the correct database name',
        'emptyselectresult': 'The query result is empty'
    },
    'api': {
        'text': 'Text(text/plain;charset=utf-8)',
        'binary': 'Binary(application/octet-stream;charset=utf-8)',
        'passThroughOption': 'Pass Through Content-Type',
        'pathHint': 'Please ensure that Path is unique and is recommended as: /envision/wind/weather',
        'methodHint': 'The POST method currently only supports application / x-www-form-urlencoded to submit data',
        'addressHint': 'The format is: host (ip): port; host (ip): port,' +
        ' multiple machines are separated by semicolons (;). Example: 10.2.3.4:8080; envisioncn.com:8080',
        'apicreate': 'API Create',
        'apiedit': 'API Edit',
        'basicInfo': 'Basic Info',
        'defineApiRequest': 'API Request',
        'defineApiBackEndService': 'API Service',
        'defineReturn': 'Return Sample',
        'group': 'Group',
        'chooseGroup': 'Please Choose a Group',
        'apiName': 'API Name',
        'fillInApiName': 'Please fill in the API Name',
        'duplicatedName': 'Sorry, duplicate name',
        'desc': 'Description',
        'fillInApiDesc': 'Please fill in the API Description',
        'requestPath': 'Request Path',
        'fillInRequestPath': 'Please fill in the Request Path',
        'wrongFormat': 'Wrong Format, the Correct Format is: /envision/wind/weather',
        'wrongAddressFormat': 'Wrong Format, the Correct Format is: host(ip):port',
        'chooseHttpMethod': 'Please Choose the HTTP Method',
        'entryMode': 'Entry Mode',
        'passThrough': 'Pass Through',
        'backendType': 'Type',
        'serviceAddress': 'Service Address',
        'servicePath': 'Service Path',
        'fillInServicePath': 'Please fill in the Service Path',
        'fillInServiceAddress': 'Please fill in the Service Address',
        'backEndTimeout': 'Timeout',
        'fillInTimeout': 'Please fill in the BackEnd timeout',
        'timeout60000': 'The maximum timeout can only be set to 60000 ms',
        'positiveTimeout': 'Please set the number of timeout to a positive number',
        'resultSuccessSample': 'Successful Sample',
        'fillInResultSuccessSample': 'Please fill in the Successful Sample',
        'resultFailedSample': 'Failed Sample',
        'required': 'Required',
        'optional': 'Optional',
        'createGroup': 'Create Group'
    },
    'assetaccess': {
        'addnode': 'Add Node',
        'delnode': 'Delete Node',
        'savenode': 'Save',
        'connecteddevice': 'Connected devices',

        'basicinfo': 'Basic Information',
        'attribute': 'Attribute',
        'datatype': 'Data Type',
        'value': 'Value',
        'operation': 'Operation',
        'selectnodewarning': 'Please select node first!',
        'addnodesucceed': 'Add topology node succeed!',
        'deletenodesucceed': 'Delete topology node succeed',
        'savesucceed': 'Save succeed!',
        'isdelete': 'Are you sure to delete the node?',
        'sure': 'Sure',
        'cancel': 'Cancel',

        'deivcecreatefailed': 'Create device failed',
        'deviceimportfailed': 'Import devices failed',
        'deviceaddtotopologysucceed': 'Add device succeed',
        'deviceaddtotopologyfailed': 'Add device failed',
        'deviceinfoupdatefailed': 'Update device information failed',
        'deviceinfoupdatesucceed': 'Update device information succeed',
        'toponodecreatefailed': 'Create topology node failed',
        'toponodecreatesucceed': 'Create topology node succeed',
        'toponodedeletefailed': 'Delete topology node failed',
        'savebasicinfofailed': 'Save basic information failed',
        'devicedeletefailed': 'Delete device failed',
        'devicedeletesucceed': 'Delete device succeed',
        'noaccess': 'No Access',

        'pointinfo': 'Point Informatica',
        'suredeletedevice': 'Are you sure to delete the device？',

        'collectunknown': 'Unknown',
        'collectedge': 'Edge',
        'collectreference': 'Reference',
        'collecthub': 'Hub',
        'deviceinfo': 'Device Information',
        'adddevice': 'Add Device',
        'updatedevice': 'Update Device',
        'importdevice': 'Import',
        'exportdevice': 'Export',
        'exportdevicedata': 'Export Divice Data',
        'importdevicesucceed': 'Device data import succeed!',
        'devicename': 'Device Name',
        'deviceid': 'Device ID',
        'devicemodel': 'Device Model',
        'collecttype': 'Collect Type',
        'collectdevice': 'Collect Device',
        'communicationstatus': 'Communication Status',
        'deviceoperation': 'Operation',
        'devicebasicinfo': 'Basic Information',
        'devicetype': 'Device Type：',
        'deviceotherbasicinfo': 'Other Information',
        'choosedevicemodel': '---Select Device Model--',
        'devicesearch': 'Search',
        'communicationnoaccess': 'Not Access',
        'communicationnormal': 'Normal',
        'communicationinterruption': 'Interrupted',
        'deviceedit': 'Edit',
        'devicedelete': 'Delete',
        'string': 'String',
        'integer': 'Integer',
        'number': 'Number',
        'date': 'Date',
        'time': 'Time',
        'enumsingle': 'Enum(Single)',
        'enummulti': 'Enum(Multiple)',
        'ipv4': 'IPv4',
        'email': 'E-mail',
        'longitude': 'Longitude',
        'latitude': 'Latitude',

        'invalidinteger': 'Invalid integer',
        'invalidnumber': 'Invalid number',
        'invaliddate': 'Invalid date',
        'invalidtime': 'Invalid time',
        'invalidipv4': 'Invalid ip address',
        'invalidemail': 'Invalid e-mail',

        'isrequired': 'Required',

        'getdevicedetailerror': 'Get device detail error!'
    },
    'assetgrouping': {
        'topologygrouping': 'Topology Group',
        'deletetopologytypeconfirmtitle': 'Are you sure to delete this grouping?',
        'creategroup': 'Create Group',
        'updategroup': 'Update Group',
        'groupname': 'Group Name',
        'pleaseinputgroupname': 'Please fill in the group name',
        'existgroupname': 'Group names already exist',

        'deletetypesuccess': 'Delete success',
        'deletetypefailed': 'Delete failed',
        'createtypefailed': 'Create failed',
        'modifytypenamesuccess': 'Modify success',
        'modifytypenamefailed': 'Modify failed',

        'pleaseselectnode': 'Please selected a node first',
        'createnode': 'Create Node',
        'deletenode': 'Delete Node',
        'nodename': 'Node Name',
        'pleaseinputnodename': 'Please fill in the node name',
        'existnodename': 'Node name already exist',

        'createnodesuccess': 'Create node success',
        'createnodefailed': 'Create node failed',
        'deletetopologynodeconfirmtitle': 'Are you sure to delete the node?',
        'deletenodesuccess': 'Delete node success',
        'deletenodefailed': 'Delete node failed',

        'selectcustomer': 'Select Organization',
        'customer': 'Organization',
        'pleaseselectcustomer': 'Please select an organization',
        'getcustomerlistfailed': 'Get organization failed',

        'gettopologytypelistfailed': 'Get asset grouping failed',

        'gettopologyfailed': 'Get topology node failed',
        'getpointtemplatelistfailed': 'Get points template list failed',

        'attribute': 'Attribute',
        'point': 'Point',

        'edit': 'Edit',
        'searchplaceholder': 'Search',

        'basicinfo': 'Basic Info',
        'addbasicinfo': 'Create Attribute',
        'editbasicinfo': 'Edit Attribute',
        'attributename': 'Attribute',
        'attributetype': 'Type',
        'attributevalue': 'Value',
        'string': 'String',
        'integer': 'Integer',
        'number': 'Number',
        'date': 'Date',
        'time': 'Time',
        'enumsingle': 'Enum(single)',
        'enummulti': 'Enum(multi)',
        'ipv4': 'IPv4',
        'email': 'Email',
        'invalidinteger': 'Invalid integer',
        'invalidnumber': 'Invalid number',
        'invaliddate': 'Invalid date',
        'invalidtime': 'Invalid time',
        'invalidipv4': 'Invalid IP',
        'invalidemail': 'Invalid email',
        'deleteattributeconfirmtitle': 'Are you sure to delete this attribute?',
        'gettopologynodeattributefailed': 'Get basic info of topology node failed',
        'standardkey': 'Key',
        'i18n': 'I18n',
        'support': 'Yes',
        'notsupport': 'No',
        'addenumvalue': 'Create Enum Value',
        'enumvalue': 'Enum Value',
        'selectedenumvalue': 'Value',
        'pleaseinputstandardkey': 'Please fill in key',
        'pleaseinputattributename': 'Please fill in attribute name',
        'pleaseinputenumvalue': 'Please fill in enum value',
        'existstandardkey': 'Key already exist',
        'existattributename': 'Attribute name already exist',
        'existenumvalue': 'Enum value already exist',
        'editotherattribute': 'Edit Other Fields',

        'pleaseinputattributekey': 'Please fill in attribute key',
        'pleaseinputattributevalue': 'Please fill in attribute value',
        'pleaseselectattributevalue': 'Please select the attribute value',
        'pleaseinputipv4': 'e.g: xxx.xxx.xxx.xxx',
        'pleaseinputemail': 'e.g: somebody@example.com',

        'createattributesuccess': 'Create attribute success',
        'createattributefailed': 'Create attribute failed',
        'setattributevaluesuccess': 'Update attribute value success',
        'setattributevaluefailed': 'Update attribute value failed',
        'updateattributesuccess': 'Update attribute success',
        'updateattributefailed': 'Update attribute failed',
        'deleteattributesuccess': 'Delete attribute success',
        'deleteattributefailed': 'Delete attribute failed',

        'pointinfo': 'Point Info',
        'pointname': 'Point',
        'pointtype': 'Type',
        'origindevice': 'Device',
        'datatest': 'Test',
        'action': 'Action',
        'collectpoint': 'Collect',
        'controlpoint': 'Control',
        'calculatepoint': 'Calculate',
        'pointunit': 'Unit',
        'pointdescription': 'Description',
        'pleaseinputpointname': 'Please fill in the point name',
        'originpoint': 'From Point(s)',
        'formula': 'Formula',
        'testresult': 'Data Test',

        'createpointsuccess': 'Create point success',
        'createpointfailed': 'Create point failed',
        'updatepointsuccess': 'Update point success',
        'updatepointfailed': 'Update point failed',
        'deletepointsuccess': 'Delete point success',
        'deletepointfailed': 'Delete point failed',

        'deletepointconfirmtitle': 'Are you sure to delete this point?',
        'gettopologynodepointfailed': 'Get point info of topology node failed',
        'pleaseselectpointtemplate': 'Please select node template',
        'overridenodepointinfoconfirmtitle': 'Are you sure to override point info?',

        'addpoint': 'Add Point',
        'editpoint': 'Edit Point',
        'savetemplate': 'Save Template',
        'relateddevice': 'Related Device',
        'pointtemplate': 'Point Template',

        'templatename': 'Template Name',
        'pleaseinputtemplatename': 'Please fill in the template name',
        'existtemplatename': 'Template name already exist',
        'createtemplatesuccess': 'Save template success',
        'createtemplatefailed': 'Save template failed',
        'applytemplatesuccess': 'Apply template success',
        'applytemplatefailed': 'Apply template failed',

        'pleaseselectdevice': 'Please select device',
        'pleaseselectfrompoint': 'Please select from point',
        'testpoint': 'Test',
        'formulaorigindevice': 'Origin Device',
        'formulatime': 'Time',
        'formulalast24hour': 'Last 24 Hours',
        'formulaacquisitionfrequency': 'Data Acquisition Frequency',
        'formulafivemin': '5 minutes',
        'formuladataabnormal': 'Data Abnormal',

        'relateddeviceselectvalue': '{n} device(s) selected',
        'frompointselectvalue': '{n} point(s) selected',
        'settopologyrelateddevicesuccess': 'Relate devices success',
        'settopologyrelateddevicefaild': 'Relate devices failed',
        'getdevicepointfailed': 'Get device points failed',
        'getnodepointtrendfailed': 'Get test trend data failed',

        'addassetgrouping': 'Add new asset group'
    },
    'groupconf': {
        'confirm': 'Confirm',
        'cancel': 'Cancel',

        'creategroup': 'Create Group',
        'updategroup': 'Update Group',
        'groupname': 'Group Name',
        'description': 'Description',
        'pleaseinputgroupdesc': 'Please fill in group description',

        'getgrouplistfailed': 'get group list failed',
        'deletesuccess': 'delete success',
        'deletefailed': 'Delete failed! Please delete the API first that belong to the group',
        'createfailed': 'create failed',
        'updatesuccess': 'update success',
        'updatefailed': 'update failed',

        'deleteconfirm': 'Are you sure to delete the group?',
        'createtime': 'Create Time',
        'operation': 'Operation',
        'searchgroupname': 'Please enter the group name that needs to be searched',
        'pleaseinputgroupname': 'Please fill in the group name',
        'existgroupname': 'Group names already exist',

        'apimanagement': 'API management',
        'update': 'Update',
        'delete': 'Delete'
    },
    'apilist': {
        'deploysuccess': 'Deploy success',
        'undeploysuccess': 'Undeploy success',

        'deleteapiconfirm': 'Are you sure to delete the API?',
        'confirm': 'Confirm',
        'cancel': 'Cancel',

        'undeployconfirm': 'Are you sure to undeploy the API?',

        'apiname': 'API name',
        'group': 'Group',
        'description': 'Description',
        'lastupdate': 'Last modified',
        'status': 'Status',
        'deploystatus': 'Deployed',
        'undeploystatus': 'Undeployed',
        'operation': 'Operation',

        'management': 'Management',
        'delete': 'Delete',
        'deploy': 'Deploy',
        'undeploy': 'Undeploy',

        'createapi': 'Create API',
        'searchapiname': 'Please enter the API name query API',

        'deployapi': 'Deploy API',
        'deployname': 'You will deploy the following API',
        'apirequestpath': 'API access address',
        'openauthtest': 'Whether to open the data permission verification',
        'tokenparamname': 'the parameter name corresponds to token',
        'pleaseinputtoken': 'Please fill in the parameter name of token',
        'metadataparamname': 'the parameter name corresponds to master data',
        'opensigntest': 'Whether to open the signature or not',
        'releasesigntip': 'The request parameter for the App name is named “appKey”，' +
        'The signature corresponding request parameter is named“sign”'
    },
    'apimanagement': {
        'group': 'Group',
        'apiname': 'Name',
        'description': 'Description',
        'lastupdate': 'Last modified',
        'requestpath': 'Request path',
        'servicepath': 'Back-end service address',
        'servicerequestpath': 'Back-end request path',
        'servicetimeout': 'Back-end timeout',
        'successresult': 'Examples of successful results',
        'failedresult': 'Example of failed results',
        'deploysuccess': 'Deploy success',
        'undeploysuccess': 'API undeploy success',
        'undeployconfirm': 'Are you sure to undeploy the API?',
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'deploystatus': 'Deployed',
        'undeploystatus': 'Undeployed',
        'edit': 'Edit',
        'deploy': 'Deploy',
        'undeploy': 'Undeploy',
        'basicinfo': 'Basic Info',
        'apirequest': 'API Request',
        'apiservice': 'API Service',
        'apiresult': 'Return Sample'
    },
    'signmethod': {
        'test': 'Verify',
        'addone': 'Adds a record',
        'lackappkey': 'The parameter lacks the appKey field',
        'appkeytip': 'The appKey field must be in the query part of the url or the parameter of the body'
    },
    'connect': {
        'edge': 'Edge',
        'ref': 'Reference',
        'repeatHint': 'There is a duplicated logical device number in this Edge, please check!',
        'cloudEdge': 'Cloud Edge',
        'editCloudEdge': 'Edit CLoud Edge',
        'addCloudEdge': 'Add Cloud Edge',
        'addEdge': 'Add Edge',
        'edgeName': 'Edge Name',
        'edgeNameHint': 'Please input edge name!',
        'type': 'Type',
        'connectType': 'Connect',
        'IP/Port': 'IP/Port',
        'IPHint': 'Please input IP and Port!',
        'protocolType': 'Protocol Type',
        'protocolTypeHint': 'Please choose a protocol type!',
        'protocol': 'Protocol',
        'protocolHint': 'Please choose a protocol!',
        'edgeStandard': 'Edge Instance',
        'edgeSource': 'Edge Replica',
        'resourceHint': 'Please fill in the value greater than 0!',
        'templateDetail': 'Detail',
        'availableTemplate': 'Template',
        'searchHint': 'Please enter the name of the template to search',
        'name': 'Name',
        'columnType': 'Type',
        'resource': 'Resource',
        'deviceNum': 'Devices',
        'edgeStatus': 'Edge Status',
        'created': 'Created',
        'notCreated': 'Not Created',
        'publishStatus': 'Publish Status',
        'edit': 'Edit',
        'config': 'Config',
        'publishingHint': 'Box is being released, please be patient!(Please check the connection status of the box,' +
        ' if it is always being published)',
        'publishCompletedHint': 'The publishing operation was successful！',
        'unpublishedHint': 'The system has detected that you have made configuration changes, ' +
        'but have not yet published, need to be released？',
        'createJarFailed': 'Resource pack creation failed, please republish!',
        'publishJarFailed': 'Resource pack fails to be published, please contact the administrator！',
        'uploadJarFailed': 'Box loaded resource pack failed, please contact administrator!',
        'publishing': 'publishing',
        'complete': 'Success',
        'fail': 'Fail',
        'unpublish': 'Unpublished',
        'lastSuccessfulTime': 'Last Successful Time',
        'deviceName': 'Device Name',
        'deviceType': 'Type',
        'template': 'Template',
        'logicNum': 'LogicNum',
        'AI': 'AI Offset',
        'DI': 'DI Offset',
        'PI': 'PI Offset',
        'addDevice': 'Add Device',
        'test': 'Test',
        'publish': 'Publish',
        'templateHint': 'Please choose a template',
        'importHint': 'deviceId and deviceTemplateId cannot be null!',
        'isConnected': 'Connected',
        'templateName': 'Template',
        'version': 'Version',
        'brand': 'Brand',
        'model': 'Model',
        'creator': 'Creator',
        'addTo': 'Add to',
        'nextStep': 'Next',
        'lastStep': 'Back',
        'choosedDevices': 'Choosed Devices',
        'chooseDevice': 'Choose Device',
        'add': 'Add',
        'deviceList': 'Device List',
        'attachTo': 'Associated to Template',
        'nameHint': 'Only alphanumeric characters are allowed!',
        'portHint': 'Port number range 30000-32767 and can not be repeated!',
        // 一下为引用器部分
        'deletedestdeviceconfirm': 'Whether to delete the device under the reference?',
        'referencedevice': 'Referenced Device',
        'referencepointcount': 'Referenced Point',
        'operation': 'Operation',
        'preview': 'Preview',
        'reference': 'Reference:',
        'adddevice': 'Add Device',
        'isreferenceable': 'Is Referenceable',
        'yes': 'Yes',
        'no': 'No',
        'adddevicetoreference': 'Add to: reference',
        'selecteddevice': 'selected devices:',
        'selectdevice': 'Select Device:',
        'devicemodel': 'Device Model:',
        'selectdevicemodelhint': 'Please select device model',
        'referenceableselecthint': 'Please select the device that can be referenced',
        'devicelist': 'Device List',
        'typeErrorHint': 'Wrong upload file type, please upload csv file!',
        'lionPort': 'Port number range'
    },
    'referenceconfig': {
        'confirm': 'Confirm',
        'cancel': 'Cancel',
        'collectpoint': 'Collection Point',
        'controlpoint': 'Control Point',
        'passthrough': 'Passthrough Point',
        'updaterefdevicesuccess': 'Update the referenced device successfully!',
        'refpointunique': 'Only one-to-one references are supported at this stage.',
        'device': 'Device',
        'beingref': '\'s point is being referenced',
        'refself': 'can\'t reference itself',

        'devicename': 'Device Name',
        'devicemodel': 'Device Model',
        'deleterefdeviceconfirm': 'The following referenced device has configured a reference relationship' +
        ' and whether it is still confirmed to delete the devices?',
        'deletedeviceconfirm': 'Confirm deleting the referenced device?',
        'deletepointrefconfirm': 'Confirm deleting the point reference?',

        'point': 'Point',
        'desc': 'Point Description',
        'pointtype': 'Point Type',
        'refdevice': 'Reference Device',
        'srcpoint': 'Source Point',
        'datatest': 'Data Test',
        'operation': 'Operation',
        'edit': 'Edit',
        'delete': 'Delete',
        'valuetype': 'Value Type',

        'relatedevice': 'Relate Device：',
        'editrefpoint': 'Edit Reference Point',
        'selectdevice': 'Select Device',
        'search': 'Search',
        'pointsearchhint': 'input point number or point description to search point',

        'time': 'Time',
        'sourcedevice': 'Source Device：',
        'timerange': 'Time：Last 24 hours',
        'timeinterval': 'Data acquisition frequency：5 minutes'
    },
    'logsearch': {
        'selectapp': 'Select App : ',
        'time': 'Time ：',
        'selecttimehint': 'Please select time',
        'selectapphint': 'Please select an app',
        'lastonehour': 'last one hour',
        'lasttwohour': 'last two hour',
        'anhourbefore': 'an hour before',
        'custom': 'custom',
        'searchkeywordhint': 'input the keyword and press ENTER to query',
        'currentcountlimit': 'Currently, only the first 10, 000 data of the search results are returned'
    }
};
